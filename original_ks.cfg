#version=RHEL8
# Kickstart for RHEL Installation
# (or Rocky Linux for born2beroot)

%pre
#!/bin/bash

# Clear existing partitions
parted -s /dev/sda mklabel msdos

# Create primary /boot partition
parted -s /dev/sda mkpart primary ext4 1MiB 501MiB
parted -s /dev/sda set 1 boot on

# Create the extended partition
parted -s /dev/sda mkpart extended 501MiB 100%

# Create logical partition inside the extended partition
parted -s /dev/sda mkpart logical 502MiB 100%
%end

# Use text install mode
text

# System language
lang en_US.UTF-8

# System keyboard
keyboard us

# System timezone
timezone Europe/Berlin --utc
timesource --ntp-server 0.fr.pool.ntp.org
timesource --ntp-server 1.fr.pool.ntp.org
timesource --ntp-server 2.fr.pool.ntp.org
timesource --ntp-server 3.fr.pool.ntp.org

# Network configuration
network --bootproto=dhcp --onboot=on --activate --hostname tischmid42

# Root password
rootpw Longpassword1.  # Make sure to replace with your desired password

# Group creation
group --name=user42
group --name=sudo

# User creation (sudo group only for born2beroot evaluation sheet)
user --name=tischmid --password=Longpassword1. --plaintext --groups=wheel,user42,sudo --gecos="Timo Schmidt" --shell=/bin/bash
user --name=peertube --password=Longpassword1. --plaintext --homedir=/var/www/peertube --shell=/bin/bash

# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda

# # Partition clearing information
# clearpart --all --initlabel --drives=sda

# Disk partitioning information
part /boot --fstype=ext4 --size=500 --asprimary --onpart=sda1
part pv.01 --size=1 --grow --encrypted --label=sda5_crypt --fstype=luks --passphrase=Longpassword1. --onpart=sda5
volgroup LVMGroup pv.01
logvol / --vgname=LVMGroup --size=10000 --name=root --fstype=ext4
logvol swap --vgname=LVMGroup --size=2000 --name=swap
logvol /home --vgname=LVMGroup --size=5000 --name=home --fstype=ext4
logvol /var --vgname=LVMGroup --size=3000 --name=var --fstype=ext4
logvol /srv --vgname=LVMGroup --size=3000 --name=srv --fstype=ext4
logvol /tmp --vgname=LVMGroup --size=3000 --name=tmp --fstype=ext4
logvol /var/log --vgname=LVMGroup --size=4000 --name=var-log --fstype=ext4

# # Installation destination
# install --driveorder=sda

# Repo information: adjust this for your mirror or local repo
# url --url="http://my.mirror.com/rhel8"
cdrom

# System authorization information
auth --useshadow --enablemd5

# SELinux configuration
selinux --enforcing

# Firewall configuration
firewall --enabled
firewall --service=ssh

# Do not configure the X Window System
skipx

# System services
# services --enabled=NetworkManager,sshd
services --enabled=sshd

# Enable kdump
%addon com_redhat_kdump --enable --reserve-mb='auto'
%end

# Create repositories
repo --name=BaseOS --baseurl=https://download.rockylinux.org/pub/rocky/9/BaseOS/x86_64/os/
repo --name=AppStream --baseurl=https://download.rockylinux.org/pub/rocky/9/AppStream/x86_64/os/

# Software selection
%packages
@core
%end

%post
# Your post-installation shell commands go here

(
# Upgrade the system
dnf update -y
dnf upgrade -y

# Needed for neofetch
dnf install -y epel-release

# For fun and convenience
dnf install -y tmux neofetch vim wget sudo

# Add neofetch to bashrc
printf '\nneofetch\n' >> /root/.bashrc
printf '\nneofetch\n' >> /home/tischmid/.bashrc

# Custom bash prompt
echo -n 'PS1=$'\''\\[\\033[31m\\]\\u\\[\\033[m\\]@\\[\\033[32m\\]\\h\\[\\033[m\\] \\[\\033[33m\\][\\w]\\[\\033[m\\]\\n\\[\\033[35m\\]~\\$\\[\\033[m\\] '\''' >> /home/tischmid/.bashrc
echo -n 'PS1=$'\''\\[\\033[31m\\]\\u\\[\\033[m\\]@\\[\\033[32m\\]\\h\\[\\033[m\\] \\[\\033[33m\\][\\w]\\[\\033[m\\]\\n\\[\\033[35m\\]~\\$\\[\\033[m\\] '\''' >> /root/.bashrc

# Molokai colorscheme for vim
mkdir --parent /root/.vim/colors
wget -O /root/.vim/colors/molokai.vim \
	https://raw.githubusercontent.com/tomasr/molokai/master/colors/molokai.vim

# vimrc
cat << 'VIMRC' > /root/.vimrc
syntax enable
set tabstop=4
set shiftwidth=4
set cursorline

set background=dark
colorscheme molokai

set autoindent
set smartindent
set cindent

set relativenumber
set laststatus=2
set showcmd

set noswapfile
set hlsearch

set ruler

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases
set smartcase

" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch

" Don't redraw while executing macros (good performance config)
set lazyredraw

" Show matching brackets when text indicator is over them
set showmatch

let vimDir = '$HOME/.vim'

if stridx(&runtimepath, expand(vimDir)) == -1
  " vimDir is not on runtimepath, add it
  let &runtimepath.=','.vimDir
endif

" Keep undo history across sessions by storing it in a file
if has('persistent_undo')
    let myUndoDir = expand(vimDir . '/undodir')
    " Create dirs
    call system('mkdir ' . vimDir)
    call system('mkdir ' . myUndoDir)
    let &undodir = myUndoDir
    set undofile
endif

" Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"zz" |
     \ endif

VIMRC

# Change some lines in the sshd_config
sed -e 's/^\s*#\?\s*Port\s*[[:digit:]].*/Port 4242/' \
	-e 's/^\s*#\?\s*PermitRootLogin\s.*/PermitRootLogin no/' \
	-e 's/^\s*#\?\s*PasswordAuthentication\s.*/PasswordAuthentication yes/' \
	-i \
	/etc/ssh/sshd_config

# For the semanage tool
dnf install -y policycoreutils-python-utils

# Allow port 4242 for ssh
# -a : add new rule
# -t <type> : rule type to add
semanage port -a -t ssh_port_t -p tcp 4242

# Add 4242 to firewall
firewall-offline-cmd --add-port=4242/tcp

# Reload sshd service
systemctl enable sshd

# Set hostname (not needed, already done by the kickstart script)
# hostnamectl set-hostname tischmid42

# Overwrite /etc/hosts
cat << 'HOSTS' > /etc/hosts
127.0.0.1     localhost localhost.localdomain localhost4 localhost4.localdomain
127.0.1.1     tischmid42 tischmid42.localdomain
::1           localhost localhost.localdomain localhost6 localhost6.localdomain
HOSTS

# Set max age, min age and warn days for passwords
sed -e 's/^\s*#\?\s*PASS_MAX_DAYS\s*[[:digit:]].*/PASS_MAX_DAYS 30/' \
	-e 's/^\s*#\?\s*PASS_MIN_DAYS\s*[[:digit:]].*/PASS_MIN_DAYS 2/' \
	-e 's/^\s*#\?\s*PASS_WARN_AGE\s*[[:digit:]].*/PASS_WARN_AGE 7/' \
	-i \
	/etc/login.defs

# Make PAM enforce strong password policies
sed -e 's/.*pam_pwquality.*/password\trequisite\tpam_pwquality.so\ttry_first_pass local_users_only retry=3 authtok_type= minlen=10 ucredit=-1 lcredit=-1 dcredit=-1 difok=7 maxrepeat=3 reject_username enforce_for_root/' \
	-i \
	/etc/pam.d/system-auth
sed -e 's/.*pam_pwquality.*/password\trequisite\tpam_pwquality.so\ttry_first_pass local_users_only retry=3 authtok_type= minlen=10 ucredit=-1 lcredit=-1 dcredit=-1 difok=7 maxrepeat=3 reject_username enforce_for_root/' \
	-i \
	/etc/pam.d/password-auth

# Max retries=3 for sudo password
printf '\nDefaults\tpasswd_tries=3\n' >> /etc/sudoers

# Custom error message
printf 'Defaults\tbadpass_message="\033[31mYou shall not pass!\033[m"\n' >> /etc/sudoers

# Log inputs and ouputs
printf 'Defaults\tlog_input\n' >> /etc/sudoers
printf 'Defaults\tlog_output\n' >> /etc/sudoers
printf 'Defaults\tiolog_dir="/var/log/sudo"\n' >> /etc/sudoers
printf 'Defaults\tlogfile="/var/log/sudo/sudo.log"\n' >> /etc/sudoers

# Don't allow sudo to be scripted
printf 'Defaults\trequiretty\n' >> /etc/sudoers

# Secure Path
printf 'Defaults\tsecure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"\n' >> /etc/sudoers

# Monitoring script
curl -sSL \
	-o '/usr/local/bin/monitoring.sh' \
	'https://raw.githubusercontent.com/cubernetes/42_born2beroot/master/kickstart/monitoring.sh'

# Make monitoring script executable
chmod +x /usr/local/bin/monitoring.sh

# Add delay file
printf '600' >> /etc/monitoring_delay

# Add crontab
printf '\n@reboot root /usr/local/bin/monitoring.sh\n' >> /etc/crontab

# Install required packages for bonus
dnf install -y lighttpd lighttpd-fastcgi mariadb mariadb-server php \
               php-mysqlnd php-fpm php-gd php-xml php-mbstring unzip

systemctl enable --now lighttpd mariadb php-fpm

# Make lighttpd include its fastcgi module (from lighttpd-fastcgi package)
printf '\ninclude "conf.d/fastcgi.conf"\n' >> '/etc/lighttpd/lighttpd.conf'

# Disable IPv6
sed -e 's/^\s*#\?\s*server.use-ipv6\s*=.*/server.use-ipv6 = "disable"/' \
	-i \
	'/etc/lighttpd/lighttpd.conf'

# Add fastcgi configuration to lighttpd
cat << FASTCGI_CONF >> '/etc/lighttpd/lighttpd.conf'

fastcgi.server += ( ".php" =>
	((
		"host" => "127.0.0.1",
		"port" => "9000",
		"broken-scriptfilename" => "enable"
	))
)
FASTCGI_CONF

# Make sure ownership for loggin directory and files is correct
chown lighttpd:lighttpd /var/log/lighttpd/access.log
chmod 644 /var/log/lighttpd/access.log
chown lighttpd:lighttpd /var/log/lighttpd/error.log
chmod 644 /var/log/lighttpd/error.log
chmod 755 /var/log/lighttpd

# Configure php-fpm to use the lighttpd user
sed -e 's/^\s*#\?\s*user\s*=\s*.*/user = lighttpd/' \
	-e 's/^\s*#\?\s*group\s*=\s*.*/group = lighttpd/' \
	-e 's/^\s*#\?\s*listen\s*=\s*.*/listen = 127.0.0.1:9000/' \
	-e 's/^\s*#\?\s*listen.owner\s*=\s*.*/listen.owner = lighttpd/' \
	-e 's/^\s*#\?\s*listen.group\s*=\s*.*/listen.group = lighttpd/' \
	-e 's/^\s*#\?\s*listen.mode\s*=\s*.*/listen.mode = 0660/' \
	-i \
	'/etc/php-fpm.d/www.conf'

# Ensure that lighttpd can change the number of open file descriptors
setsebool -P httpd_setrlimit on

# Ensure that lighttpd can communicate locally with php-fpm
setsebool -P httpd_can_network_connect 1

# Restart lighttpd and php-fpm
systemctl restart lighttpd php-fpm

# Download and install wordpress
cd '/tmp'
wget 'https://wordpress.org/latest.zip' -O latest.zip
unzip './latest.zip'
rm -f './latest.zip'
mv './wordpress' '/var/www/lighttpd'

# Make sure permissions are correct
chown -R lighttpd:lighttpd '/var/www/lighttpd/wordpress'
find '/var/www/lighttpd/wordpress' -type d -exec chmod 775 {} \;
find '/var/www/lighttpd/wordpress' -type f -exec chmod 644 {} \;

# Copy configuration file
cd -P '/var/www/lighttpd/wordpress'
cp './wp-config-sample.php' './wp-config.php'

# Wordpress database settings
sed -e "s/^\s*#\?\s*define(\s*'DB_NAME',\s*.*/define('DB_NAME', 'wordpress');/" \
	-e "s/^\s*#\?\s*define(\s*'DB_USER',\s*.*/define('DB_USER', 'wpuser');/" \
	-e "s/^\s*#\?\s*define(\s*'DB_PASSWORD',\s*.*/define('DB_PASSWORD', 'Longpassword1.');/" \
	-e "s/^\s*#\?\s*define(\s*'DB_HOST',\s*.*/define('DB_HOST', 'localhost');/" \
	-i \
	'./wp-config.php'

# Remove defines that need a salt
grep -v 'put your unique phrase here' './wp-config.php' > tmp.php

# Add lines that needed a salt
curl -L 'https://api.wordpress.org/secret-key/1.1/salt' >> tmp.php

# Self-explanatory
mv './tmp.php' './wp-config.php'

# Make sure ownership and permissions are good
chown lighttpd:lighttpd './wp-config.php'
chmod 644 './wp-config.php'

# Firewall for web (80 and 443)
firewall-offline-cmd --add-service=http
firewall-offline-cmd --add-service=https

# Ensure SELinux context of the files
chcon -R -t httpd_sys_content_t /var/www/lighttpd/wordpress

# Restart lighttpd again
systemctl restart lighttpd

# MariaDB secure installation and Database creation
#      # This line gives problems for some reason
#      UPDATE mysql.user SET Password=PASSWORD('Longpassword1.') WHERE User='root';
mysql -fu root << 'SQL_COMMANDS'
DELETE FROM mysql.user WHERE User='';
DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
DROP DATABASE IF EXISTS test;
DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
FLUSH PRIVILEGES;

CREATE DATABASE wordpress;
CREATE USER 'wpuser'@'localhost' IDENTIFIED BY 'Longpassword1.';
GRANT ALL PRIVILEGES ON wordpress.* TO 'wpuser'@'localhost';
FLUSH PRIVILEGES;
SQL_COMMANDS

# FTP
dnf install -y vsftpd
systemctl enable --now vsftpd

echo 'tischmid' >> /etc/vsftpd.userlist

# Owns and perms for ftp folder
mkdir -p /home/tischmid/ftp/files
chown nobody: /home/tischmid/ftp
chmod a-w /home/tischmid/ftp
chown -R tischmid: /home/tischmid/ftp/files
chmod -R 750 /home/tischmid/ftp/files

# Firewall for ftp
firewall-offline-cmd --add-port=20-21/tcp
firewall-offline-cmd --add-port=40000-40001/tcp

# Restart vsftpd
systemctl restart vsftpd
) 1>/var/log/post_install.log 2>&1

%end